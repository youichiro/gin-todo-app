name: run actionlint and test

on:
  push:
    branches:
      - main

jobs:
  actionlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download actionlint
        id: get_actionlint
        run: bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
        shell: bash
      - name: Check workflow files
        run: ${{ steps.get_actionlint.outputs.executable }} -color
        shell: bash
  golangci:
    runs-on: ubuntu-latest
    needs: actionlint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.29
          working-directory: api
  test:
    runs-on: ubuntu-latest
    needs: golangci
    services:
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: go_todo_app_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17
          check-latest: true
          cache: true
          cache-dependency-path: api/go.sum
      - name: Install golang-migrate
        run: go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - name: Run migraitons
        run: migrate -database postgres://postgres:postgres@localhost:5432/go_todo_app_test?sslmode=disable -path ./db/migrations up
      - name: Install dependencies
        working-directory: api
        run: go mod tidy
      - name: Test
        working-directory: api
        run: go test ./... --shuffle=on -p=2 -cover
